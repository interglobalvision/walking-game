{"version":3,"sources":["compass.js","error.js","game.js","index.js","menu.js","router.js","utilities.color.js","utilities.dialog.js","utilities.misc.js","utilities.number.js","utilities.word.js"],"names":["Compass","$blackout","$","$radar","$angle","$mapStage","$compass","$mapFloor","$compassContainer","$mapGoal","$mapSky","$mapGoalContainer","$mapOrientation","watchId","orientation","position","origin","lat","lng","destiny","baseDistance","Game","modifyDiffulty","minDistance","maxDistance","destinyThresholdRadius","totalDistance","getDistanceInKm","pointA","pointB","_this","this","R","dLat","deg2rad","dLon","a","Math","sin","cos","c","atan2","sqrt","d","rad2deg","rad","deg","PI","getRandomDistance","min","max","way","random","distance","getAngle","pointC","AB","pow","BC","AC","acos","updatePosition","reference","distanceToDestiny","distanceFromGoal","progressToGoal","mapFloorPos","mapGoalScale","css","-webkit-transform","transform","setTotalDistance","stop","updateOrientation","northOrientation","compensationAngle","angle","goalAngle","goalPos","scenePos","skyColor","now","Date","hour","getHours","mapTheme","addClass","getWorld","startGeoWatchers","navigator","geolocation","watchPosition","coords","latitude","longitude","error","alert","enableHighAccuracy","userAgent","match","compass","watchHeading","heading","magneticHeading","window","bind","event","alpha","stopGeoWatchers","clearWatch","unbind","nextMinigame","resetDestiny","callback","setNewPoints","Utilities","Number","getRandomInt","init","DeviceOrientationEvent","getCurrentPosition","pos","animate","opacity","WalkingError","unsupportedGPS","unsupportedCompensation","throw","log","message","console","unsupported","tech","getUsername","gameComplete","minigames","worlds","gameAttempts","shareTitle","score","shareSubject","shareUrl","createUser","username","localStorage","setItem","newRank","setupLoop","getItem","setProgress","setLoopOrder","Misc","shuffleArray","getProgress","progress","parseInt","isNaN","getProgressPercent","currentProgress","length","newDistance","oldDistance","getTotalDistance","parseFloat","getTotalDistanceString","distances","randomDistance","calcDistance","toFixed","getLoops","loops","setLoops","loopOrder","getLoopOrder","split","modifyDifficulty","difficulty","modifier","gameOrder","Router","go","finishLoop","currentLoops","nextWorld","setRank","current","next","getWorldName","worldNum","Word","getAdj","getNoun","getRank","gameFail","tryAgainCallback","failCallback","points","getPoints","setPoints","currentPoints","currentGems","getGems","modifiedPoints","round","resetPoints","gems","setGems","setNewGems","shareWithOptions","plugins","socialsharing","share","errorMessage","app","initialize","bindEvents","document","addEventListener","onDeviceReady","onContentLoaded","onBackKeyDown","receivedEvent","FastClick","attach","body","id","html","Menu","$menu","$menuButton","$menuPoints","$menuDistance","$menuRank","$menuWorld","$buttonShare","$buttonOpenSub","$buttonCloseSub","howtoGreeting","resetDestinyDialog","$resetDestiny","$devMenu","$devEnd","toggleMenu","closeSubMenu","toggle","prepend","on","preventDefault","openSubMenu","attr","Dialog","read","menu","removeClass","regex","basePath","exec","location","href","cordova","platformId","isBrowser","url","Color","isNeighborColor","color1","color2","tolerance","undefined","abs","hslToRgb","h","s","l","r","g","b","hue2rgb","p","q","t","$target","$parent","$skip","interval","arrayIndex","lineIndex","lineTimer","outputText","inProgress","dialogArray","show","append","off","click.dialogRead","skipLine","finish","readLine","dialogLine","setInterval","innerHTML","clearLineInterval","clearInterval","hide","remove","array","temp","index","counter","floor","vibrate","otherDuration","duration","roundFloat","number","adjs","nouns","adjsList","nounList","getWord","kind","indefinite","capitalize","list","word","charAt","toUpperCase","slice","isVowel","character","test","Adjs","Nouns"],"mappings":"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","file":"index.js","sourcesContent":["Compass = {\n  $blackout: $('#blackout'),\n  $radar: $('#radar'),\n  $angle: $('#angle'),\n  $mapStage: $('.map-stage'),\n  $compass: $('#compass'),\n  $mapFloor: $('.map-floor'),\n  $compassContainer: $('#compass-container'),\n  $mapGoal: $('#map-goal'),\n  $mapSky: $('.map-sky'),\n  $mapGoalContainer: $('#map-goal-container'),\n  $mapOrientation: $('.map-orientation'),\n  watchId: {\n    orientation: null,\n    position: null,\n  },\n  origin: {\n    lat: null,\n    lng: null,\n  },\n  destiny: {\n    lat: null,\n    lng: null,\n  },\n  position: {\n    lat: null,\n    lng: null,\n  },\n  /*\n    minDistance: 0.0025, // in radians\n    maxDistance: 0.006, // in radians\n  */\n  baseDistance: Game.modifyDiffulty(0.0001),\n  minDistance: baseDistance + 0.0023, // in radians\n  maxDistance: baseDistance + 0.0026, // in radians\n  destinyThresholdRadius: 0.300, // in Km\n\n  totalDistance: 0,\n\n  /*\n   * Return distance between two geographical points in Kilometers\n   *\n   */\n  getDistanceInKm: function(pointA, pointB) {\n    var _this = this;\n\n    var R = 6371; // Radius of the earth in km\n    var dLat = _this.deg2rad(pointB.lat - pointA.lat);\n    var dLon = _this.deg2rad(pointB.lng - pointA.lng);\n    var a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(_this.deg2rad(pointA.lat)) * Math.cos(_this.deg2rad(pointB.lat)) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2)\n    ;\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c; // Distance in km\n\n    return d;\n  },\n\n  /*\n   * Convert radians to degrees\n   *\n   */\n  rad2deg: function(rad) {\n    return rad * 57.29577951308232;\n  },\n\n  /*\n   * Convert degrees to radians\n   *\n   */\n  deg2rad: function(deg) {\n    return deg * (Math.PI / 180);\n  },\n\n  /*\n   * Return a random number in the range of:\n   * -max < x <  -min\n   *  min < x < max\n   *\n   */\n  getRandomDistance: function(min, max) {\n    // Positive or negative?\n    var way = Math.random() >= 0.5;\n    var distance = Math.random() * (max - min) + min;\n\n    if (way) {\n      distance = distance * -1;\n    }\n\n    return distance;\n  },\n\n  /*\n   * Calculates the angle ABC (in radians)\n   *\n   * A first point\n   * C second point\n   * B center point\n   *\n   * It always return the smallest angle, so angle is always < 180deg\n   *\n   */\n  getAngle: function( pointA, pointB, pointC ) {\n    var _this = this;\n    var AB = Math.sqrt(Math.pow(pointB.lng - pointA.lng,2) + Math.pow(pointB.lat - pointA.lat,2));\n    var BC = Math.sqrt(Math.pow(pointB.lng - pointC.lng,2) + Math.pow(pointB.lat - pointC.lat,2));\n    var AC = Math.sqrt(Math.pow(pointC.lng - pointA.lng,2) + Math.pow(pointC.lat - pointA.lat,2));\n\n    return _this.rad2deg(Math.acos((BC * BC + AB * AB - AC * AC) / (2 * BC * AB)));\n  },\n\n  /*\n   * Update players geographical position\n   *\n   */\n  updatePosition: function(position) {\n    var _this = this;\n\n    // Update players position\n    _this.position = position;\n\n    // Update north reference\n    _this.reference = {\n      lat: position.lat + _this.minDistance,\n      lng: position.lng,\n    };\n\n\n    // Check distance in Km between position and destiny\n    var distanceToDestiny = _this.getDistanceInKm(_this.position, _this.destiny);\n\n    // distanceFromGoal is a percentage value describing how far you are from the destiny [meaning the threshold of destiny and the moment the next game triggers].\n    // This is based on your location from the moment the destiny is created.\n    // So at 100[%] you have just generated a new destiny. At 0[%] you are at destiny.\n    // This value can be larger than 100 if you move in the wrong direction.\n    var distanceFromGoal = ( (distanceToDestiny - _this.destinyThresholdRadius) * 100 ) / _this.totalDistance;\n\n    // progressToGoal is users progress toward goal radius.\n    // this is the inverse of distanceFromGoal\n    // 0[%] is moment of destiny creation and 100[%] is at destiny\n    var progressToGoal = 100 - distanceFromGoal;\n\n    // progressToGoal is multiplied to a thousandth decimal point of 75\n    // to use as pecentage of 75% when moving the map floor gradient.\n    // 75% is the full Y axis translation of the gradient\n    var mapFloorPos = progressToGoal * 0.75;\n\n    // progressToGoal is multiplied to a thousandth decimal point\n    // to use as scale of the map Goal object.\n    // 1.00 is the object at full scale (goal is reached).\n    var mapGoalScale = progressToGoal * 0.01;\n\n    // if mapFloorPos is less than 0, we set it to 0\n    // this keeps the floor from sliding off screen\n    if (mapFloorPos < 0) {\n      mapFloorPos = 0;\n    }\n\n    // if mapGoalScale is less than 0.01, we set it to 0.01\n    // goal object from disappearing entirely or going negative scale\n    if (mapGoalScale < 0.01) {\n      mapGoalScale = 0.01;\n    }\n\n    _this.$mapFloor.css({\n      '-webkit-transform': 'translateY(' + mapFloorPos + '%)',\n      'transform': 'translateY(' + mapFloorPos + '%)',\n    });\n\n    _this.$mapGoal.css({\n      '-webkit-transform': 'scale(' + mapGoalScale + ')',\n      'transform': 'scale(' + mapGoalScale + ')',\n    });\n\n    if (distanceToDestiny < _this.destinyThresholdRadius) {\n\n      Game.setTotalDistance(distanceToDestiny); //add distance to total\n\n      _this.stop();\n\n    }\n  },\n\n  updateOrientation: function(orientation) {\n    var _this = this;\n\n    var northOrientation = orientation * -1;\n\n    // Get compensation angle\n    var compensationAngle = _this.getAngle( _this.reference, _this.position, _this.destiny);\n\n    // If destiny is at West of origin\n    if (_this.position.lng > _this.destiny.lng) {\n      compensationAngle = 360 - compensationAngle;\n    }\n\n    var angle = compensationAngle + northOrientation;\n\n    // All the following alculations are based on a\n    // the angle from 0 - 360, so we add 360 if the angle\n    // is negative.\n    if (angle < 0) {\n      angle = angle + 360;\n    }\n\n    // Here we save the angle in a new variable to use for\n    // the goal positioning.\n    var goalAngle = angle;\n\n    // We make that new angle from -180 - 180, because CSS\n    // translateX transform will need a pos or neg value\n    // to move the element left and right of center.\n    if (angle > 180) {\n      goalAngle = angle - 360;\n    }\n\n    // When the compass is pointed 70deg (+ or -) from 0 (top),\n    // the arrow points offscreen.  So we get a percent of 70\n    // to position the goal object with the arrow\n    var goalPos = goalAngle / 0.7;\n\n    // If the flag is offscreen, we don't move it\n    if (goalPos > 75) {\n      goalPos = 75;\n    } else if (goalPos < -75) {\n      goalPos = -75;\n    }\n\n    // for the scene we want a value from -25% - 25% to translate\n    // left or right of center.  180 / 25 = 7.2\n    var scenePos = angle / 7.2;\n\n    if (angle > 180) {\n      scenePos = ( ( angle - 180 ) / 7.2 ) - 25;\n    }\n\n    _this.$mapGoalContainer.css({\n      '-webkit-transform': 'translateX(' + goalPos + '%)',\n      'transform': 'translateX(' + goalPos + '%)',\n    });\n\n    _this.$mapOrientation.css({\n      '-webkit-transform': 'translateX(' + scenePos + '%)',\n      'transform': 'translateX(' + scenePos + '%)',\n    });\n\n    _this.$compass.css({\n      '-webkit-transform': 'rotate(' + angle + 'deg)',\n      'transform': 'rotate(' + angle + 'deg)',\n    });\n\n  },\n\n  skyColor: function() {\n    var _this = this;\n\n    var now = new Date();\n\n    if (now) {\n      var hour = now.getHours(),\n        skyColor;\n\n      if (hour > 4 && hour < 10) {\n\n        skyColor = 'rgb(100, 160, 255)'; // Morning 5 - 9\n\n      } else if (hour > 9 && hour < 17) {\n\n        skyColor = 'rgb(145, 205, 242)'; // Day 10 - 16\n\n      } else if (hour > 16 &&  hour < 22) {\n\n        skyColor = 'rgb(10, 40, 95)'; // Evening 17 - 21\n\n      } else {\n\n        skyColor = 'rgb(0, 20, 60)'; // Night 22 - 4\n\n      }\n\n      _this.$mapSky.css('background-color', skyColor); // set sky color\n    }\n  },\n\n  /*\n   * Sets map theme graphics\n   *\n   */\n  mapTheme: function() {\n    var _this = this;\n\n    _this.$mapStage.addClass('world-' + Game.getWorld());\n  },\n\n  /*\n   * Bind navigator.gelocation and deviceorientation events\n   *\n   */\n  startGeoWatchers: function () {\n    var _this = this;\n\n    // Start geolocation watch\n    _this.watchId.position = navigator.geolocation.watchPosition( function(position) {\n      _this.updatePosition({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      });\n    }, function(error) {\n\n      alert(error);\n    }, {\n\n      enableHighAccuracy: true,\n    });\n\n    // Start orientation compass\n\n    // if cordova\n    if (navigator.userAgent.match(/(iPhone|iPod|Android)/)) {\n      _this.watchId.orientation = navigator.compass.watchHeading( function(heading) {\n        _this.updateOrientation(heading.magneticHeading);\n      });\n\n    } else {\n      $(window).bind('deviceorientation.compassOrientation', function() {\n        // dont parse event as function variable as breaks scope\n        _this.updateOrientation(event.alpha);\n     });\n    }\n  },\n\n  /*\n   * Ubind navigator.gelocation and deviceorientation events\n   *\n   */\n  stopGeoWatchers: function() {\n    var _this = this;\n\n    navigator.geolocation.clearWatch( _this.watchId.position );\n    navigator.compass.clearWatch( _this.watchId.orientation );\n\n  },\n\n  stop: function() {\n    var _this = this;\n\n    _this.stopGeoWatchers();\n    $(window).unbind('.compassOrientation');\n\n    Game.nextMinigame();\n  },\n\n  resetDestiny: function(callback) {\n    var _this = this;\n\n    _this.stopGeoWatchers();\n    $(window).unbind('.compassOrientation');\n\n    Game.setNewPoints( Utilities.Number.getRandomInt(-100,0) );\n\n    _this.init();\n\n    if (callback) {\n      callback();\n    }\n\n  },\n\n  init: function() {\n    var _this = this;\n\n    // Check for geolocation and orientation availability\n    if (navigator.geolocation && window.DeviceOrientationEvent) {\n\n      // Set initial positions: origin, destiny, position\n      navigator.geolocation.getCurrentPosition( function(position) {\n\n        var pos = position.coords;\n\n        // Set Origin location\n        _this.origin.lat = pos.latitude,\n        _this.origin.lng = pos.longitude,\n\n        // Generate random destiny\n        _this.destiny.lat = pos.latitude + _this.getRandomDistance(_this.minDistance,_this.maxDistance);\n        _this.destiny.lng = pos.longitude + _this.getRandomDistance(_this.minDistance,_this.maxDistance);\n\n        // Set total distance\n        _this.totalDistance = _this.getDistanceInKm({\n          lat: pos.latitude,\n          lng: pos.longitude\n        }, _this.destiny) - _this.destinyThresholdRadius;\n\n        // Set current position\n        _this.updatePosition({\n          lat: pos.latitude,\n          lng: pos.longitude,\n        });\n\n        // Set sky color\n        _this.skyColor();\n\n        // Set map theme graphics\n        _this.mapTheme();\n\n        // Start orientation and position watchers\n        _this.startGeoWatchers();\n\n        // Fade in map\n        _this.$blackout.animate({'opacity': 0,}, 1000, 'linear');\n\n      });\n\n    } else {\n\n      WalkingError.unsupportedGPS();\n\n    }\n  },\n};\n","WalkingError = {\n  unsupportedCompensation: 1000,\n\n  // most basic not sure if useful\n  throw: function(log, message) {\n    console.log(log);\n    alert(message);\n  },\n\n  // most likely usecase\n  unsupported: function(tech) {\n    var _this = this;\n\n    if (!tech) {\n      tech = 'the required technology';\n    }\n\n    console.log(tech + ' is unsupported on this device');\n\n    alert('Sorry ' + Game.getUsername() + ', but your device does not support ' + tech + '!! But I will give you a consolation prize... Here\\'s ' + _this.unsupportedCompensation + ' points. Now get outta here!');\n\n    Game.gameComplete(_this.unsupportedCompensation);\n  },\n\n  // perhaps this is only likely to happen if a user says no to GPS\n  unsupportedGPS: function() {\n\n    console.log('Fuck. No GPS');\n    alert('Sorry ' + Game.getUsername() + ', but your device does not support GPS or you have denied the app access to your location. You can\\'t go walking if I don\\'t know where you are. Open the Walking Game settings on your device and allow location access!!');\n\n  },\n}","Game = {\n  minigames: [\n    'tippyswitch',\n    'math',\n    'supertap',\n    'reset',\n    'colorsnap',\n    'vibeystopper',\n    'jankenpon',\n    'worldtraveler',\n    'medit8',\n  ],\n  worlds: [\n    'Desert',\n    'City',\n    'Arctic',\n    'Jungle',\n  ],\n  gameAttempts: 2,\n\n  shareTitle: function(score) {\n    return 'WOOAAAAHH! U HAVE AN AWESOME SCORe 0F ' + score + ' POIIINTSSS BRAAAHHH';\n  },\n  shareSubject: 'Subject: I did this on Walking Game. The most tiring phone game ever made',\n  shareUrl: 'http://interglobal.vision/',\n\n  // USER\n\n  createUser: function(username, callback) {\n    var _this = this;\n\n    window.localStorage.setItem('username', username);\n    window.localStorage.setItem('points', 0);\n    window.localStorage.setItem('gems', 0);\n    window.localStorage.setItem('progress', 0);\n    window.localStorage.setItem('distance', 0);\n    window.localStorage.setItem('loops', 0);\n    window.localStorage.setItem('world', 0);\n    window.localStorage.setItem('rank', _this.newRank());\n    _this.setupLoop();\n\n    callback();\n  },\n\n  getUsername: function() {\n    return window.localStorage.getItem('username');\n  },\n\n  // GAME STATE\n\n  setupLoop: function() {\n    var _this = this;\n\n    console.log('Setting up loop');\n\n    _this.setProgress(0);\n\n    _this.setLoopOrder( Utilities.Misc.shuffleArray(_this.minigames) );\n\n  },\n\n  getProgress: function() {\n    var progress = parseInt(window.localStorage.getItem('progress'));\n\n    if (progress === null || isNaN(progress)) {\n      progress = 0;\n    }\n\n    return progress;\n  },\n\n  setProgress: function(progress) {\n    window.localStorage.setItem('progress', progress);\n  },\n\n  getProgressPercent: function() {\n    var _this = this;\n    var currentProgress = _this.getProgress();\n\n    return currentProgress / this.minigames.length;\n  },\n\n  setTotalDistance: function(newDistance) {\n    var _this = this;\n    var oldDistance = _this.getTotalDistance();\n    var newDistance = parseFloat(newDistance);\n\n    window.localStorage.setItem('distance', oldDistance + newDistance);\n  },\n\n  getTotalDistance: function() {\n    return window.localStorage.getItem('distance') ? parseFloat( window.localStorage.getItem('distance') ) : 0;\n  },\n\n  getTotalDistanceString: function() {\n    var _this = this;\n    var totalDistance = _this.getTotalDistance();\n\n    var distances = [\n      [ 0.0046, 'anacondas', ],\n      [ 0.025, 'blue whales', ],\n      [ 0.828, 'Burj Khalifas', ],\n      [ 0.006, 'elephant trunks', ],\n      [ 0.00206, 'Ebenezer Places', ],\n      [ 385000.6, 'Lunar distances', ],\n      [ 40075.0, 'Earth circumferences', ],\n    ];\n\n    var randomDistance = distances[ Utilities.Number.getRandomInt(0, distances.length - 1) ];\n    var calcDistance = totalDistance / randomDistance[0];\n\n    if ( calcDistance > 1 ) {\n      calcDistance = calcDistance.toFixed(3);\n    }\n\n    return calcDistance + ' ' + randomDistance[1];\n  },\n\n  getLoops: function() {\n    var loops = parseInt(window.localStorage.getItem('loops'));\n\n    if (loops === null || isNaN(loops)) {\n      loops = 0;\n    }\n\n    return loops;\n  },\n\n  setLoops: function(loops) {\n    window.localStorage.setItem('loops', loops);\n  },\n\n  setLoopOrder: function(loopOrder) {\n    window.localStorage.setItem('loopOrder', loopOrder);\n  },\n\n  getLoopOrder: function() {\n    var _this = this;\n\n    var loopOrder = window.localStorage.getItem('loopOrder');\n\n    if(!loopOrder) {\n      return [];\n    }\n    return loopOrder.split(',');\n  },\n\n  modifyDifficulty: function(difficulty) {\n    var _this = this;\n\n    var loops = _this.getLoops();\n    var modifier = loops + 1;\n\n    return modifier * difficulty;\n  },\n\n  nextMinigame: function() {\n    var _this= this;\n    var currentProgress = _this.getProgress();\n    var gameOrder = _this.getLoopOrder();\n\n    console.log('Loading next minigame');\n    console.log('Current progress index', currentProgress);\n    console.log('Game to load', gameOrder[currentProgress]);\n\n    Router.go('/games/' + gameOrder[currentProgress] + '/');\n  },\n\n  finishLoop: function() {\n    var _this = this;\n    var currentLoops = _this.getLoops();\n    var currentWorld = _this.getWorld();\n\n    console.log('Finished loop');\n\n    // perhaps a lot more needs to happen here. This is probably where the narrative should happen. But this could be a different route just for animation. Would then need to if/else in gameComplete when checking if last game in loop\n\n    _this.setLoops(currentLoops + 1);\n\n    _this.nextWorld();\n    _this.setRank();\n\n    console.log('Loops so far', currentLoops);\n\n    _this.setupLoop();\n\n    Router.go('/scenes/levelup/');\n  },\n\n  // WORLD\n\n  nextWorld: function() {\n    var _this = this;\n    var current = _this.getWorld();\n    var next = current + 1;\n\n    if ( next === _this.worlds.length ) {\n      window.localStorage.setItem('world', 0);\n    } else {\n      window.localStorage.setItem('world', next);\n    }\n  },\n\n  getWorld: function() {\n    return parseInt( window.localStorage.getItem('world') );\n  },\n\n  getWorldName: function() {\n    var _this = this;\n    var worldNum = _this.getWorld();\n\n    return _this.worlds[worldNum];\n  },\n\n  // RANK\n  setRank: function() {\n    var _this = this;\n\n    window.localStorage.setItem('rank', _this.newRank());\n  },\n\n  newRank: function() {\n    return Utilities.Word.getAdj(true, true) + ' ' + Utilities.Word.getNoun(false, true);\n  },\n\n  getRank: function() {\n    return window.localStorage.getItem('rank');\n  },\n\n  // MINI GAME\n\n  gameFail: function(tryAgainCallback, failCallback) {\n    var _this= this;\n\n    if (_this.gameAttempts > 1) {\n      _this.gameAttempts--;\n      tryAgainCallback();\n    } else {\n      failCallback();\n    }\n\n  },\n\n  gameComplete: function(points) {\n    var _this= this;\n    var currentProgress = _this.getProgress();\n\n    _this.setProgress(currentProgress + 1);\n\n    if (points) {\n      _this.setNewPoints(points);\n    }\n\n    if ((currentProgress + 1) === _this.minigames.length) {\n      _this.finishLoop();\n    } else {\n      Router.go('/pages/compass/');\n    }\n\n  },\n\n  // POINTS\n\n  getPoints: function() {\n    var points = parseInt( window.localStorage.getItem('points') );\n\n    if (points === null || isNaN(points)) {\n      points = 0;\n    }\n\n    return points;\n  },\n\n  setPoints: function(points) {\n    window.localStorage.setItem('points', points);\n  },\n\n  setNewPoints: function(points) {\n    var _this = this;\n\n    var points = parseInt(points);\n    var currentPoints = _this.getPoints();\n    var currentGems = _this.getGems();\n\n    if (points > 0) {\n      var modifier = (Math.log(currentGems+ 1) + 1);\n      var modifiedPoints = Math.round((points * modifier));\n\n      _this.setPoints( currentPoints + modifiedPoints );\n    } else {\n      _this.setPoints( currentPoints + points );\n    }\n  },\n\n  resetPoints: function() {\n    var _this = this;\n\n    _this.setPoints(0);\n  },\n\n  // GEMS\n\n  getGems: function() {\n    var gems = parseInt( window.localStorage.getItem('gems') );\n\n    if (gems === null || isNaN(gems)) {\n      gems = 0;\n    }\n\n    return gems;\n  },\n\n  setGems: function(gems) {\n    window.localStorage.setItem('gems', gems);\n  },\n\n  setNewGems: function(gems) {\n    var _this = this;\n    var gems = parseInt(gems);\n    var currentGems = _this.getGems();\n\n    _this.setGems( currentGems + gems);\n  },\n\n  // SOCIAL SHARING\n\n  shareWithOptions: function() {\n    var _this = this;\n    var score = _this.getPoints();\n\n    window.plugins.socialsharing.share(\n      _this.shareTitle(score),\n      _this.shareSubject,\n      'http://puu.sh/mTFtM/242a0fa967.png',\n      _this.shareUrl,\n      function() {\n        console.log('share ok');\n      },\n      function(errorMessage) {\n        console.log('share failed');\n        console.log(errorMessage);\n        alert('something went wrong');\n      }\n    );\n\n  },\n\n};\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar app = {\n  // Application Constructor\n  initialize: function() {\n    this.bindEvents(); \n  },\n  // Bind Event Listeners\n  //\n  // Bind any events that are required on startup. Common events are:\n  // 'load', 'deviceready', 'offline', and 'online'.\n  bindEvents: function() {\n    document.addEventListener('deviceready', this.onDeviceReady, false);\n    document.addEventListener('DOMContentLoaded', this.onContentLoaded, false);\n    document.addEventListener('backbutton', this.onBackKeyDown, false);\n  },\n  // deviceready Event Handler\n  //\n  // The scope of 'this' is the event. In order to call the 'receivedEvent'\n  // function, we must explicitly call 'app.receivedEvent(...);'\n  onDeviceReady: function() {\n    app.receivedEvent('deviceready');\n  },\n  onContentLoaded: function() {\n    FastClick.attach(document.body);\n  },\n  onBackKeyDown: function() {\n    return true;\n  },\n  // Update DOM on a Received Event\n  receivedEvent: function(id) {\n    console.log('Received Event: ' + id);\n\n    $('#game-username').html(Game.getUsername());\n    $('#game-points').html(Game.getPoints());\n    $('#game-gems').html(Game.getGems());\n    $('#game-progress').html(Game.getProgressPercent());\n  }\n};\n\napp.initialize();\n\nUtilities = {\n\n};\n","Menu = {\n  $blackout: $('#blackout'),\n  $menu: $('.menu'),\n  $menuButton: $('#map-menu-button'),\n  $menuPoints: $('#menu-points'),\n  $menuDistance: $('#menu-distance'),\n  $menuRank: $('#menu-rank'),\n  $menuWorld: $('#menu-world'),\n  $buttonShare: $('[data-ref=\"menu-share\"]'),\n  $buttonOpenSub: $('.open-sub-menu'),\n  $buttonCloseSub: $('.close-sub-menu'),\n\n  howtoGreeting: '<p>dear ' + Game.getUsername() + ',</p>',\n\n  resetDestinyDialog: [\n    'What? You lost? Pshh...',\n    'Ok, I\\'ll set a new walking goal for you, ' + Game.getUsername() + '...',\n    '...and imma take some points off your score!'\n  ],\n\n  $resetDestiny: $('[data-ref=\"menu-reset-destiny\"]'),\n\n  // Dev controls\n  $devMenu: $('[data-ref=\"dev-menu\"]'),\n  $devEnd: $('[data-ref=\"dev-end-map\"]'),\n\n  toggleMenu: function() {\n    var _this = this;\n\n    _this.closeSubMenu();\n\n    _this.$menu.toggle(\"fast\");\n  },\n\n  init: function() {\n    var _this = this;\n\n    _this.$menuPoints.html( Game.getPoints() );\n    _this.$menuDistance.html( Game.getTotalDistanceString() );\n    _this.$menuWorld.html( Game.getWorldName() );\n    _this.$menuRank.html( Game.getRank() );\n\n    $('.howto-text').prepend( _this.howtoGreeting );\n\n    // Toggle menu\n    _this.$menuButton.on('click', function() {\n      _this.toggleMenu();\n    });\n\n    // Share\n    _this.$buttonShare.on('click', function(event) {\n      event.preventDefault();\n      Game.shareWithOptions();\n    });\n\n    // Open sub menu\n    _this.$buttonOpenSub.on('click', function(event) {\n      event.preventDefault();\n      _this.openSubMenu( $(this).attr('data-ref') );\n    });\n\n    // Close sub menu\n    _this.$buttonCloseSub.on('click', function(event) {\n      event.preventDefault();\n      _this.closeSubMenu();\n    });\n\n    // Reset destiny\n    _this.$resetDestiny.on('click', function(event) {\n      event.preventDefault();\n      _this.toggleMenu();\n      Utilities.Dialog.read(_this.resetDestinyDialog, function() {\n        Compass.resetDestiny(function() {\n          _this.$menuPoints.html(Game.getPoints());\n        });\n      });\n    });\n\n    // Dev control click events\n    _this.$devMenu.on('click', function(event) {\n      event.preventDefault();\n      Router.go('/pages/dev/');\n    });\n\n    _this.$devEnd.on('click', function(event) {\n      event.preventDefault();\n      Compass.stop();\n    });\n\n  },\n\n  openSubMenu: function(menu) {\n    $('#menu-main').addClass('show-sub-menu');\n    $('#' + menu).addClass('show-sub-menu');\n  },\n\n  closeSubMenu: function() {\n    $('#menu-main').removeClass('show-sub-menu');\n    $('.sub-menu').removeClass('show-sub-menu');\n  },\n\n};\n","Router = {\n  init: function() {\n    var _this = this;\n\n    var regex =  /(.+?(?:www))/;\n    _this.basePath = regex.exec(window.location.href);\n\n    if (window.cordova.platformId === 'browser') {\n      _this.isBrowser = true;\n    } else {\n      _this.isBrowser = false;\n    }\n  },\n  go: function(url) {\n    var _this = this;\n\n    if (_this.isBrowser) {\n      window.location = url;\n    } else {\n      window.location = _this.basePath[0] + url + 'index.html';\n    }\n  },\n}\nRouter.init();","Utilities.Color = {\n  isNeighborColor: function(color1, color2, tolerance) {\n    if (tolerance == undefined) {\n      tolerance = 32;\n    }\n\n    return Math.abs(color1[0] - color2[0]) <= tolerance\n    && Math.abs(color1[1] - color2[1]) <= tolerance\n    && Math.abs(color1[2] - color2[2]) <= tolerance;\n  },\n\n  hslToRgb: function(h, s, l){\n    var r, g, b;\n\n    if (s == 0) {\n        r = g = b = l; // achromatic\n    } else {\n      var hue2rgb = function hue2rgb(p, q, t){\n        if (t < 0) {\n          t += 1;\n        }\n\n        if (t > 1) {\n          t -= 1;\n        }\n\n        if (t < 1 / 6) {\n          return p + (q - p) * 6 * t;\n        }\n\n        if (t < 1 / 2) {\n          return q;\n        }\n\n        if (t < 2 / 3) {\n          return p + (q - p) * (2 / 3 - t) * 6;\n        }\n\n        return p;\n      };\n\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255),];\n  }\n};","Utilities.Dialog = {\n  $target: $('.text-box-dialog'),\n  $parent: $('#dialog'),\n  $skip: undefined,\n  interval: 33,\n\n  arrayIndex: 0,\n\n  lineIndex: 0,\n  lineTimer: 0,\n  outputText: '',\n  inProgress: false,\n\n  read: function(dialogArray, callback) {\n\n    var _this = this;\n\n    _this.$parent = $('#dialog');\n    _this.$target = $('.text-box-dialog');\n\n    _this.dialogArray = dialogArray;\n    _this.arrayIndex = 0;\n\n    _this.$parent.show();\n    _this.inProgress = true;\n\n    _this.$parent.append('<div id=\"dialog-skip\"></div>');\n    _this.$skip = $('#dialog-skip');\n\n    _this.$skip.off('click.dialogRead').on({\n      'click.dialogRead': function() {\n        if (_this.lineTimer > 0) {\n          _this.skipLine();\n        } else {\n          if (_this.arrayIndex === (_this.dialogArray.length - 1)) {\n            _this.finish(callback);\n          } else {\n            _this.arrayIndex++;\n            _this.readLine();\n          }\n        }\n      },\n    });\n\n    _this.readLine();\n\n  },\n\n  readLine: function() {\n    var _this = this;\n    var dialogLine = _this.dialogArray[_this.arrayIndex];\n\n    _this.lineIndex = 0;\n    _this.$target.html('');\n    _this.outputText = '';\n\n    _this.lineTimer = setInterval(function() {\n\n      if (_this.lineIndex < dialogLine.length) {\n\n        _this.outputText += dialogLine[_this.lineIndex];\n        _this.$target[0].innerHTML = _this.outputText;\n\n        _this.lineIndex++;\n\n      } else {\n\n        _this.clearLineInterval();\n        _this.$target.append('<a class=\"text-box-next\">&rarr;</a>');\n\n      }\n\n    }, _this.interval);\n  },\n\n  clearLineInterval: function() {\n    var _this = this;\n\n    clearInterval(_this.lineTimer);\n    _this.lineTimer = 0;\n  },\n\n  skipLine: function() {\n    var _this = this;\n\n    _this.clearLineInterval();\n    _this.$target.html(_this.dialogArray[_this.arrayIndex]);\n    _this.$target.append('<a class=\"text-box-next\">&rarr;</a>');\n\n  },\n\n  finish: function(callback) {\n    var _this = this;\n\n    _this.$parent.hide();\n    _this.inProgress = false;\n    _this.$target.html('');\n    _this.$skip.remove();\n\n    if (callback) {\n      callback();\n    }\n  },\n\n};\n","Utilities.Misc = {\n  shuffleArray: function(array) {\n    var counter = array.length, temp, index;\n\n    // While there are elements in the array\n    while (counter > 0) {\n      // Pick a random index\n      index = Math.floor(Math.random() * counter);\n\n      // Decrease counter by 1\n      counter--;\n\n      // And swap the last element with it\n      temp = array[counter];\n      array[counter] = array[index];\n      array[index] = temp;\n    }\n\n    return array;\n  },\n\n  vibrate: function(otherDuration) {\n    var duration = 1000;\n\n    if (otherDuration) {\n      duration = otherDuration;\n    }\n\n    if (navigator.vibrate) {\n      navigator.vibrate(duration);\n    } else {\n      console.log('no vibrate support');\n    }\n  }\n};","Utilities.Number = {\n  getRandomInt: function(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  },\n  roundFloat: function(number) {\n    // this is how to round to 3 decimal places in js lmao\n    number = (number + 0.00001) * 1000;\n    number = Math.floor(number);\n    number = number / 1000;\n\n    return number;\n  }\n};","Utilities.Word = {\n  adjs: [],\n  nouns: [],\n\n  init: function(adjsList, nounList) {\n    var _this = this;\n\n    _this.adjs = adjsList;\n    _this.nouns = nounList;\n\n  },\n\n  /**\n   * Returns a word from the lists\n   * @param {string} kind Defines what kind of word return (adj|noun)\n   * @param {bool} indefinite Defines if it should append an indefinite article\n   */\n  getWord: function(kind, indefinite, capitalize) {\n    var _this = this;\n\n    var list = kind ==  'adj' ? _this.adjs : _this.nouns;\n    var word = list[Math.floor(Math.random() * list.length)];\n\n    if (capitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n\n    if (indefinite) {\n      if (_this.isVowel(word[0])) {\n        word = 'an ' + word;\n      } else {\n        word = 'a ' + word;\n      }\n    }\n\n    return word;\n  },\n\n  getAdj: function(indefinite, capitalize) {\n    var _this = this;\n\n    return _this.getWord('adj', indefinite, capitalize);\n  },\n\n  getNoun: function(indefinite, capitalize) {\n    var _this = this;\n\n    return _this.getWord('noun', indefinite, capitalize);\n  },\n\n  isVowel: function(character) {\n    return /[aeiouAEIOU]/.test(character);\n  }\n}\n\nUtilities.Word.init(Adjs, Nouns);\n"],"sourceRoot":"/source/"}