{"version":3,"sources":["compass.js","game.js","index.js","router.js","utilities.color.js","utilities.dialog.js","utilities.number.js","utilities.word.js"],"names":["Compass","watchId","orientation","position","origin","lat","lng","destiny","minDistance","maxDistance","thresholdRadius","totalDistance","getDistanceInKm","pointA","pointB","_this","this","R","dLat","deg2rad","dLon","a","Math","sin","cos","c","atan2","sqrt","d","rad2deg","rad","deg","PI","getRandomDistance","min","max","way","random","distance","getAngle","pointC","AB","pow","BC","AC","acos","updatePosition","reference","distanceToDestiny","bleepSpeed","$radar","css","html","stop","Game","nextMinigame","updateOrientation","northOrientation","compensationAngle","angle","$compass","-webkit-transform","transform","startGeoWatchers","navigator","geolocation","watchPosition","coords","latitude","longitude","error","alert","enableHighAccuracy","userAgent","match","compass","watchHeading","heading","magneticHeading","$","window","bind","event","alpha","clearWatch","unbind","init","DeviceOrientationEvent","getCurrentPosition","pos","console","log","minigames","gameAttempts","createUser","username","callback","localStorage","setItem","getUsername","getItem","resetProgress","gameFail","tryAgainCallback","failCallback","gameComplete","points","currentProgress","parseInt","isNaN","setNewPoints","Router","go","getProgressPercent","length","getPoints","currentPoints","currentGems","modifier","modifiedPoints","round","getGems","setNewGems","gems","app","initialize","bindEvents","document","addEventListener","onDeviceReady","onContentLoaded","receivedEvent","FastClick","attach","body","id","Utilities","regex","basePath","exec","location","href","cordova","platformId","isBrowser","url","Color","isNeighborColor","color1","color2","tolerance","undefined","abs","hslToRgb","h","s","l","r","g","b","hue2rgb","p","q","t","Dialog","$target","$parent","interval","arrayIndex","lineIndex","lineTimer","read","dialogArray","show","off","on","click.dialogRead","skipLine","finish","readLine","dialogLine","setInterval","append","clearLineInterval","clearInterval","hide","Number","getRandomInt","floor","Word","adjs","nouns","adjsList","nounList","getWord","kind","indefinite","list","word","isVowel","getAdj","getNoun","character","test","Adjs","Nouns"],"mappings":"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","file":"index.js","sourcesContent":["Compass = {\n  watchId: {\n    orientation: null,\n    position: null,\n  },\n  origin: {\n    lat: null,\n    lng: null,\n  },\n  destiny: {\n    lat: null,\n    lng: null,\n  },\n  position: {\n    lat: null,\n    lng: null,\n  },\n  /*\n    minDistance: 0.0025, // in radians\n    maxDistance: 0.006, // in radians\n  */\n  minDistance: 0.0025, // in radians\n  maxDistance: 0.0028, // in radians\n  thresholdRadius: 0.300, // in Km\n\n  totalDistance: 0,\n\n  /*\n   * Return distance between two geographical points in Kilometers\n   *\n   */\n  getDistanceInKm: function(pointA, pointB) {\n    var _this = this;\n\n    var R = 6371; // Radius of the earth in km\n    var dLat = _this.deg2rad(pointB.lat - pointA.lat);\n    var dLon = _this.deg2rad(pointB.lng - pointA.lng);\n    var a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(_this.deg2rad(pointA.lat)) * Math.cos(_this.deg2rad(pointB.lat)) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2)\n    ;\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c; // Distance in km\n\n    return d;\n  },\n\n  /*\n   * Convert radians to degrees\n   *\n   */\n  rad2deg: function(rad) {\n    return rad * 57.29577951308232;\n  },\n\n  /*\n   * Convert degrees to radians\n   *\n   */\n  deg2rad: function(deg) {\n    return deg * (Math.PI / 180);\n  },\n\n  /*\n   * Return a random number in the range of:\n   * -max < x <  -min\n   *  min < x < max\n   *\n   */\n  getRandomDistance: function(min, max) {\n    // Positive or negative?\n    var way = Math.random() >= 0.5;\n    var distance = Math.random() * (max - min) + min;\n\n    if (way) {\n      distance = distance * -1;\n    }\n\n    return distance;\n  },\n\n  /*\n   * Calculates the angle ABC (in radians)\n   *\n   * A first point\n   * C second point\n   * B center point\n   *\n   * It always return the smallest angle, so angle is always < 180deg\n   *\n   */\n  getAngle: function( pointA, pointB, pointC ) {\n    var _this = this;\n    var AB = Math.sqrt(Math.pow(pointB.lng - pointA.lng,2) + Math.pow(pointB.lat - pointA.lat,2));\n    var BC = Math.sqrt(Math.pow(pointB.lng - pointC.lng,2) + Math.pow(pointB.lat - pointC.lat,2));\n    var AC = Math.sqrt(Math.pow(pointC.lng - pointA.lng,2) + Math.pow(pointC.lat - pointA.lat,2));\n\n    return _this.rad2deg(Math.acos((BC * BC + AB * AB - AC * AC) / (2 * BC * AB)));\n  },\n\n  /*\n   * Update players geographical position\n   *\n   */\n  updatePosition: function(position) {\n    var _this = this;\n\n    // Update players position\n    _this.position = position;\n\n    // Update north reference\n    _this.reference = {\n      lat: position.lat + _this.minDistance,\n      lng: position.lng,\n    };\n\n\n    // Check distance in Km between position and destiny\n    var distanceToDestiny = _this.getDistanceInKm(_this.position, _this.destiny);\n\n    var bleepSpeed = ( (distanceToDestiny - _this.thresholdRadius) * 1000 ) / _this.totalDistance;// - _this.thresholdRadius;\n\n    _this.$radar.css('animation-duration', bleepSpeed + 'ms');\n    _this.$radar.html(bleepSpeed + 'ms');\n\n    if( distanceToDestiny < _this.thresholdRadius ) {\n      _this.stop();\n      Game.nextMinigame();\n    } \n  },\n\n  updateOrientation: function(orientation) {\n    var _this = this;\n\n    var northOrientation = orientation * -1;\n\n    // Get compensation angle\n    var compensationAngle = _this.getAngle( _this.reference, _this.position, _this.destiny);\n\n    // If destiny is at West of origin\n    if( _this.position.lng > _this.destiny.lng ) {\n      compensationAngle = 360 - compensationAngle;\n    }\n\n    var angle = compensationAngle + northOrientation;\n\n    _this.$compass.css({\n      '-webkit-transform': 'rotate(' + angle + 'deg)',\n      'transform': 'rotate(' + angle + 'deg)',\n    });\n\n  },\n\n  /*\n   * Bind navigator.gelocation and deviceorientation events\n   *\n   */\n  startGeoWatchers: function () {\n    var _this = this;\n\n    // Start geolocation watch\n    _this.watchId.position = navigator.geolocation.watchPosition( function(position) {\n      _this.updatePosition({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      });\n    }, function(error) {\n\n      alert(error);\n    }, {\n\n      enableHighAccuracy: true,\n    });\n\n    // Start orientation compass\n    \n    // if cordova\n    if (navigator.userAgent.match(/(iPhone|iPod|Android)/)) {\n      _this.watchId.orientation = navigator.compass.watchHeading( function(heading) {\n        _this.updateOrientation(heading.magneticHeading);\n      });\n\n    } else {\n      $(window).bind('deviceorientation.compassOrientation', function() {\n        // dont parse event as function variable as breaks scope\n        _this.updateOrientation(event.alpha);\n     });\n    }\n  },\n\n  /*\n   * Ubind navigator.gelocation and deviceorientation events\n   *\n   */\n  stop: function() {\n    var _this = this;\n\n    navigator.geolocation.clearWatch( _this.watchId.position );\n    navigator.compass.clearWatch( _this.watchId.orientation );\n\n    $(window).unbind('.compassOrientation');\n  },\n\n  init: function() {\n    var _this = this;\n\n    _this.$radar = $('#radar');\n    _this.$compass = $('#compass');\n\n    // Check for geolocation and orientation availability\n    if (navigator.geolocation && window.DeviceOrientationEvent) {\n\n      // Set initial positions: origin, destiny, position\n      navigator.geolocation.getCurrentPosition( function(position) {\n\n        var pos = position.coords;\n\n        // Set Origin location\n        _this.origin.lat = pos.latitude,\n        _this.origin.lng = pos.longitude,\n\n        // Generate random destiny\n        _this.destiny.lat = pos.latitude + _this.getRandomDistance(_this.minDistance,_this.maxDistance);\n        _this.destiny.lng = pos.longitude + _this.getRandomDistance(_this.minDistance,_this.maxDistance);\n\n        // Set total distance\n        _this.totalDistance = _this.getDistanceInKm({\n          lat: pos.latitude,\n          lng: pos.longitude\n        }, _this.destiny) - _this.thresholdRadius;\n\n        // Set current position\n        _this.updatePosition({\n          lat: pos.latitude,\n          lng: pos.longitude,\n        });\n\n\n        // Start orientation and position watchers\n        _this.startGeoWatchers();\n\n      });\n\n    } else {\n\n      // fallback for when not possible. Why? no idea but it might happen\n      console.log(':(');\n    }\n  },\n};\n","Game = {\n  minigames: [\n    'tippyswitch',\n    'math',\n    'supertap',\n    'reset',\n    'photocolor',\n  ],\n  gameAttempts: 2,\n\n  createUser: function(username, callback) {\n    _this = this;\n\n    window.localStorage.setItem('username', username);\n\n    window.localStorage.setItem('points', 0);\n    window.localStorage.setItem('gems', 0);\n    window.localStorage.setItem('progress', 0);\n\n    callback();\n  },\n\n  getUsername: function() {\n    return window.localStorage.getItem('username');\n  },\n\n  resetProgress: function() {\n    window.localStorage.setItem('progress', 0);\n  },\n\n  gameFail: function(tryAgainCallback, failCallback) {\n    var _this= this;\n\n    if (_this.gameAttempts > 1) {\n      _this.gameAttempts--;\n      tryAgainCallback();\n    } else {\n      failCallback();\n    }\n\n  },\n\n  gameComplete: function(points) {\n    var _this= this;\n    var currentProgress = parseInt(window.localStorage.getItem('progress'));\n\n    if (currentProgress === null || isNaN(currentProgress)) {\n      currentProgress = 0;\n    }\n\n    window.localStorage.setItem('progress', (currentProgress + 1));\n\n    if (points) {\n      _this.setNewPoints(points);\n    }\n\n    Router.go('/');\n  },\n\n  nextMinigame: function() {\n    var currentProgress = parseInt(window.localStorage.getItem('progress'));\n\n    Router.go('/games/' + this.minigames[currentProgress] + '/');\n  },\n\n  getProgressPercent: function() {\n    var currentProgress = parseInt(window.localStorage.getItem('progress'));\n\n    return currentProgress / this.minigames.length;\n  },\n\n  getPoints: function() {\n    return window.localStorage.getItem('points');\n  },\n\n  setNewPoints: function(points) {\n    var points = parseInt(points);\n    var currentPoints = parseInt(window.localStorage.getItem('points'));\n    var currentGems = parseInt(window.localStorage.getItem('gems'));\n\n    if (currentPoints === null || isNaN(currentPoints)) {\n      currentPoints = 0;\n    }\n\n    if (currentGems === null || isNaN(currentGems)) {\n      currentGems = 0;\n    }\n\n    if (points > 0) {\n      var modifier = (Math.log(currentGems+ 1) + 1);\n      var modifiedPoints = Math.round((points * modifier));\n\n      window.localStorage.setItem('points', (currentPoints + modifiedPoints));\n    } else {\n      window.localStorage.setItem('points', (currentPoints + points));\n    }\n  },\n\n  getGems: function() {\n    return window.localStorage.getItem('gems');\n  },\n\n  setNewGems: function(gems) {\n    var gems = parseInt(gems);\n    var currentGems = window.localStorage.getItem('gems');\n\n    if (currentGems === null || isNaN(currentGems)) {\n      currentGems = 0;\n    }\n\n    window.localStorage.setItem('gems', (parseInt(currentGems) + gems));\n  },\n\n};\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar app = {\n  // Application Constructor\n  initialize: function() {\n    this.bindEvents();\n  },\n  // Bind Event Listeners\n  //\n  // Bind any events that are required on startup. Common events are:\n  // 'load', 'deviceready', 'offline', and 'online'.\n  bindEvents: function() {\n    document.addEventListener('deviceready', this.onDeviceReady, false);\n    document.addEventListener('DOMContentLoaded', this.onContentLoaded, false);\n  },\n  // deviceready Event Handler\n  //\n  // The scope of 'this' is the event. In order to call the 'receivedEvent'\n  // function, we must explicitly call 'app.receivedEvent(...);'\n  onDeviceReady: function() {\n    app.receivedEvent('deviceready');\n  },\n  onContentLoaded: function() {\n    FastClick.attach(document.body);\n  },\n  // Update DOM on a Received Event\n  receivedEvent: function(id) {\n    console.log('Received Event: ' + id);\n\n    $('#game-username').html(Game.getUsername());\n    $('#game-points').html(Game.getPoints());\n    $('#game-gems').html(Game.getGems());\n    $('#game-progress').html(Game.getProgressPercent());\n  }\n};\n\napp.initialize();\n\nUtilities = {\n\n};","Router = {\n  init: function() {\n    var _this = this;\n\n    var regex =  /(.+?(?:www))/;\n    _this.basePath = regex.exec(window.location.href);\n\n    if (window.cordova.platformId === 'browser') {\n      _this.isBrowser = true;\n    } else {\n      _this.isBrowser = false;\n    }\n  },\n  go: function(url) {\n    var _this = this;\n\n    if (_this.isBrowser) {\n      window.location = url;\n    } else {\n      window.location = _this.basePath[0] + url + 'index.html';\n    }\n  },\n}\nRouter.init();","Utilities.Color = {\n  isNeighborColor: function(color1, color2, tolerance) {\n    if (tolerance == undefined) {\n      tolerance = 32;\n    }\n\n    return Math.abs(color1[0] - color2[0]) <= tolerance\n    && Math.abs(color1[1] - color2[1]) <= tolerance\n    && Math.abs(color1[2] - color2[2]) <= tolerance;\n  },\n\n  hslToRgb: function(h, s, l){\n    var r, g, b;\n\n    if (s == 0) {\n        r = g = b = l; // achromatic\n    } else {\n      var hue2rgb = function hue2rgb(p, q, t){\n        if (t < 0) {\n          t += 1;\n        }\n\n        if (t > 1) {\n          t -= 1;\n        }\n\n        if (t < 1 / 6) {\n          return p + (q - p) * 6 * t;\n        }\n\n        if (t < 1 / 2) {\n          return q;\n        }\n\n        if (t < 2 / 3) {\n          return p + (q - p) * (2 / 3 - t) * 6;\n        }\n\n        return p;\n      };\n\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255),];\n  }\n};","Utilities.Dialog = {\n  $target: $('.text-box-dialog'),\n  $parent: $('#dialog'),\n  interval: 44,\n\n  arrayIndex: 0,\n\n  lineIndex: 0,\n  lineTimer: 0,\n\n  read: function(dialogArray, callback) {\n\n    var _this = this;\n\n    _this.$parent = $('#dialog');\n    _this.$target = $('.text-box-dialog');\n\n    _this.dialogArray = dialogArray;\n    _this.arrayIndex = 0;\n    _this.callback = callback;\n\n    _this.$parent.show();\n\n    _this.$parent.off('click.dialogRead').on({\n      'click.dialogRead': function() {\n        if (_this.lineTimer > 0) {\n          _this.skipLine();\n        } else {\n          if (_this.arrayIndex === (_this.dialogArray.length - 1)) {\n            _this.finish();\n          } else {\n            _this.arrayIndex++;\n            _this.readLine();\n          }\n        }\n      },\n    });\n\n    _this.readLine();\n\n  },\n\n  readLine: function() {\n    var _this = this;\n    var dialogLine = _this.dialogArray[_this.arrayIndex];\n\n    _this.lineIndex = 0;\n    _this.$target.html('');\n    _this.lineTimer = setInterval(function() {\n\n      if (_this.lineIndex < dialogLine.length) {\n\n        _this.$target.append(dialogLine[_this.lineIndex]);\n        _this.lineIndex++;\n\n      } else {\n\n        _this.clearLineInterval();\n        _this.$target.append('<a class=\"text-box-next\">&rarr;</a>');\n\n      }\n\n    }, _this.interval);\n  },\n\n  clearLineInterval: function() {\n    var _this = this;\n\n    clearInterval(_this.lineTimer);\n    _this.lineTimer = 0;\n  },\n\n  skipLine: function() {\n    var _this = this;\n\n    _this.clearLineInterval();\n    _this.$target.html(_this.dialogArray[_this.arrayIndex]);\n    _this.$target.append('<a class=\"text-box-next\">&rarr;</a>');\n\n  },\n\n  finish: function() {\n    var _this = this;\n\n    _this.$parent.hide();\n    _this.$target.html('');\n\n    _this.callback();\n  },\n\n};\n","Utilities.Number = {\n  getRandomInt: function(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  },\n};","Utilities.Word = {\n  adjs: [],\n  nouns: [],\n\n  init: function(adjsList, nounList) {\n    var _this = this;\n\n    _this.adjs = adjsList;\n    _this.nouns = nounList;\n\n  },\n\n  /**\n   * Returns a word from the lists\n   * @param {string} kind Defines what kind of word return (adj|noun)\n   * @param {bool} indefinite Defines if it should append an indefinite article\n   */\n  getWord: function(kind, indefinite) {\n    var _this = this;\n\n    var list = kind ==  'adj' ? _this.adjs : _this.nouns;\n    var word = list[Math.floor(Math.random() * list.length)];\n\n    if (indefinite) {\n      if (_this.isVowel(word[0])) {\n        word = 'an ' + word;\n      } else {\n        word = 'a ' + word;\n      }\n    }\n\n    return word;\n  },\n\n  getAdj: function(indefinite) {\n    var _this = this;\n\n    return _this.getWord('adj', indefinite);\n  },\n\n  getNoun: function(indefinite) {\n    var _this = this;\n\n    return _this.getWord('noun', indefinite);\n  },\n\n  isVowel: function(character) {\n    return /[aeiouAEIOU]/.test(character);\n  }\n}\n\nUtilities.Word.init(Adjs, Nouns);\n"],"sourceRoot":"/source/"}