{"version":3,"sources":["compass.js","game.js","index.js","menu.js","router.js","utilities.color.js","utilities.dialog.js","utilities.misc.js","utilities.number.js","utilities.word.js"],"names":["Compass","$radar","$","$angle","$mapStage","$compass","$mapFloor","$compassContainer","$mapGoal","$mapSky","$mapGoalContainer","watchId","orientation","position","origin","lat","lng","destiny","minDistance","maxDistance","destinyThresholdRadius","totalDistance","getDistanceInKm","pointA","pointB","_this","this","R","dLat","deg2rad","dLon","a","Math","sin","cos","c","atan2","sqrt","d","rad2deg","rad","deg","PI","getRandomDistance","min","max","way","random","distance","getAngle","pointC","AB","pow","BC","AC","acos","updatePosition","reference","distanceToDestiny","distanceFromGoal","progressToGoal","mapFloorPos","mapGoalScale","css","-webkit-transform","transform","stop","updateOrientation","northOrientation","compensationAngle","angle","goalPos","skyColor","now","Date","hour","getHours","mapTheme","addClass","Game","getWorld","startGeoWatchers","navigator","geolocation","watchPosition","coords","latitude","longitude","error","alert","enableHighAccuracy","userAgent","match","compass","watchHeading","heading","magneticHeading","window","bind","event","alpha","stopGeoWatchers","clearWatch","unbind","nextMinigame","init","DeviceOrientationEvent","getCurrentPosition","pos","fadeIn","console","log","minigames","worlds","gameAttempts","createUser","username","callback","localStorage","setItem","setRank","setupLoop","getUsername","getItem","setProgress","setLoopOrder","Utilities","Misc","shuffleArray","getProgress","progress","parseInt","isNaN","getProgressPercent","currentProgress","length","getLoops","loops","setLoops","loopOrder","getLoopOrder","split","gameOrder","Router","go","finishLoop","currentLoops","nextWorld","currentWorld","getWorldName","worldNum","Word","getAdj","getNoun","getRank","gameFail","tryAgainCallback","failCallback","gameComplete","points","setNewPoints","getPoints","setPoints","currentPoints","currentGems","getGems","modifier","modifiedPoints","round","resetPoints","gems","setGems","setNewGems","app","initialize","bindEvents","document","addEventListener","onDeviceReady","onContentLoaded","onBackKeyDown","receivedEvent","FastClick","attach","body","id","html","Menu","$menuBubble","$menuButton","$menuPoints","$menuRank","$menuWorld","toggleMenu","toggle","on","regex","basePath","exec","location","href","cordova","platformId","isBrowser","url","Color","isNeighborColor","color1","color2","tolerance","undefined","abs","hslToRgb","h","s","l","r","g","b","hue2rgb","p","q","t","Dialog","$target","$parent","interval","arrayIndex","lineIndex","lineTimer","read","dialogArray","show","off","click.dialogRead","skipLine","finish","readLine","dialogLine","setInterval","append","clearLineInterval","clearInterval","hide","array","temp","index","counter","floor","Number","getRandomInt","adjs","nouns","adjsList","nounList","getWord","kind","indefinite","capitalize","list","word","charAt","toUpperCase","slice","isVowel","character","test","Adjs","Nouns"],"mappings":"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","file":"index.js","sourcesContent":["Compass = {\n  $radar: $('#radar'),\n  $angle: $('#angle'),\n  $mapStage: $('.map-stage'),\n  $compass: $('#compass'),\n  $mapFloor: $('.map-floor'),\n  $compassContainer: $('#compass-container'),\n  $mapGoal: $('#map-goal'),\n  $mapSky: $('.map-sky'),\n  $mapGoalContainer: $('#map-goal-container'),\n  watchId: {\n    orientation: null,\n    position: null,\n  },\n  origin: {\n    lat: null,\n    lng: null,\n  },\n  destiny: {\n    lat: null,\n    lng: null,\n  },\n  position: {\n    lat: null,\n    lng: null,\n  },\n  /*\n    minDistance: 0.0025, // in radians\n    maxDistance: 0.006, // in radians\n  */\n  minDistance: 0.0025, // in radians\n  maxDistance: 0.0028, // in radians\n  destinyThresholdRadius: 0.300, // in Km\n\n  totalDistance: 0,\n\n  /*\n   * Return distance between two geographical points in Kilometers\n   *\n   */\n  getDistanceInKm: function(pointA, pointB) {\n    var _this = this;\n\n    var R = 6371; // Radius of the earth in km\n    var dLat = _this.deg2rad(pointB.lat - pointA.lat);\n    var dLon = _this.deg2rad(pointB.lng - pointA.lng);\n    var a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(_this.deg2rad(pointA.lat)) * Math.cos(_this.deg2rad(pointB.lat)) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2)\n    ;\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c; // Distance in km\n\n    return d;\n  },\n\n  /*\n   * Convert radians to degrees\n   *\n   */\n  rad2deg: function(rad) {\n    return rad * 57.29577951308232;\n  },\n\n  /*\n   * Convert degrees to radians\n   *\n   */\n  deg2rad: function(deg) {\n    return deg * (Math.PI / 180);\n  },\n\n  /*\n   * Return a random number in the range of:\n   * -max < x <  -min\n   *  min < x < max\n   *\n   */\n  getRandomDistance: function(min, max) {\n    // Positive or negative?\n    var way = Math.random() >= 0.5;\n    var distance = Math.random() * (max - min) + min;\n\n    if (way) {\n      distance = distance * -1;\n    }\n\n    return distance;\n  },\n\n  /*\n   * Calculates the angle ABC (in radians)\n   *\n   * A first point\n   * C second point\n   * B center point\n   *\n   * It always return the smallest angle, so angle is always < 180deg\n   *\n   */\n  getAngle: function( pointA, pointB, pointC ) {\n    var _this = this;\n    var AB = Math.sqrt(Math.pow(pointB.lng - pointA.lng,2) + Math.pow(pointB.lat - pointA.lat,2));\n    var BC = Math.sqrt(Math.pow(pointB.lng - pointC.lng,2) + Math.pow(pointB.lat - pointC.lat,2));\n    var AC = Math.sqrt(Math.pow(pointC.lng - pointA.lng,2) + Math.pow(pointC.lat - pointA.lat,2));\n\n    return _this.rad2deg(Math.acos((BC * BC + AB * AB - AC * AC) / (2 * BC * AB)));\n  },\n\n  /*\n   * Update players geographical position\n   *\n   */\n  updatePosition: function(position) {\n    var _this = this;\n\n    // Update players position\n    _this.position = position;\n\n    // Update north reference\n    _this.reference = {\n      lat: position.lat + _this.minDistance,\n      lng: position.lng,\n    };\n\n\n    // Check distance in Km between position and destiny\n    var distanceToDestiny = _this.getDistanceInKm(_this.position, _this.destiny);\n\n    // distanceFromGoal is a percentage value describing how far you are from the destiny [meaning the threshold of destiny and the moment the next game triggers].\n    // This is based on your location from the moment the destiny is created.\n    // So at 100[%] you have just generated a new destiny. At 0[%] you are at destiny.\n    // This value can be larger than 100 if you move in the wrong direction.\n    var distanceFromGoal = ( (distanceToDestiny - _this.destinyThresholdRadius) * 100 ) / _this.totalDistance;\n\n    // progressToGoal is users progress toward goal radius.\n    // this is the inverse of distanceFromGoal\n    // 0[%] is moment of destiny creation and 100[%] is at destiny\n    var progressToGoal = 100 - distanceFromGoal;\n\n    // progressToGoal is multiplied to a thousandth decimal point of 75\n    // to use as pecentage of 75% when moving the map floor gradient.\n    // 75% is the full Y axis translation of the gradient\n    var mapFloorPos = progressToGoal * 0.75;\n\n    // progressToGoal is multiplied to a thousandth decimal point\n    // to use as scale of the map Goal object.\n    // 1.00 is the object at full scale (goal is reached).\n    var mapGoalScale = progressToGoal * 0.01;\n\n    // if mapFloorPos is less than 0, we set it to 0\n    // this keeps the floor from sliding off screen\n    if (mapFloorPos < 0) {\n      mapFloorPos = 0;\n    }\n\n    // if mapGoalScale is less than 0.01, we set it to 0.01\n    // goal object from disappearing entirely or going negative scale\n    if (mapGoalScale < 0.01) {\n      mapGoalScale = 0.01;\n    }\n\n    _this.$mapFloor.css({\n      '-webkit-transform': 'translateY(' + mapFloorPos + '%)',\n      'transform': 'translateY(' + mapFloorPos + '%)',\n    });\n\n    //mapGoalScale = 0.5; // testing\n\n    _this.$mapGoal.css({\n      '-webkit-transform': 'scale(' + mapGoalScale + ')',\n      'transform': 'scale(' + mapGoalScale + ')',\n    });\n\n    if (distanceToDestiny < _this.destinyThresholdRadius) {\n      _this.stop();\n    }\n  },\n\n  updateOrientation: function(orientation) {\n    var _this = this;\n\n    var northOrientation = orientation * -1;\n\n    // Get compensation angle\n    var compensationAngle = _this.getAngle( _this.reference, _this.position, _this.destiny);\n\n    // If destiny is at West of origin\n    if (_this.position.lng > _this.destiny.lng) {\n      compensationAngle = 360 - compensationAngle;\n    }\n\n    var angle = compensationAngle + northOrientation;\n\n    // When the compass is pointed 70deg (+ or -) from 0 (top),\n    // the arrow points offscreen.  So we get a percent of 70\n    // to position the goal object with the arrow\n    var goalPos = angle / 0.7;\n\n    _this.$mapGoalContainer.css({\n      '-webkit-transform': 'translateX(' + goalPos + '%)',\n      'transform': 'translateX(' + goalPos + '%)',\n    });\n\n    _this.$compass.css({\n      '-webkit-transform': 'rotate(' + angle + 'deg)',\n      'transform': 'rotate(' + angle + 'deg)',\n    });\n\n  },\n\n  skyColor: function() {\n    var _this = this;\n\n    var now = new Date();\n\n    if (now) {\n      var hour = now.getHours(),\n        skyColor;\n\n      if (hour > 4 && hour < 10) {\n\n        skyColor = 'rgb(100, 160, 255)'; // Morning 5 - 9\n\n      } else if (hour > 9 && hour < 17) {\n\n        skyColor = 'rgb(0, 120, 255)'; // Day 10 - 16\n\n      } else if (hour > 16 &&  hour < 22) {\n\n        skyColor = 'rgb(10, 40, 95)'; // Evening 17 - 21\n\n      } else {\n\n        skyColor = 'rgb(0, 20, 60)'; // Night 22 - 4\n\n      }\n\n      _this.$mapSky.css('background-color', skyColor); // set sky color\n    }\n  },\n\n  /*\n   * Sets map theme graphics\n   *\n   */\n  mapTheme: function() {\n    var _this = this;\n\n    _this.$mapStage.addClass('world-' + Game.getWorld());\n  },\n\n  /*\n   * Bind navigator.gelocation and deviceorientation events\n   *\n   */\n  startGeoWatchers: function () {\n    var _this = this;\n\n    // Start geolocation watch\n    _this.watchId.position = navigator.geolocation.watchPosition( function(position) {\n      _this.updatePosition({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      });\n    }, function(error) {\n\n      alert(error);\n    }, {\n\n      enableHighAccuracy: true,\n    });\n\n    // Start orientation compass\n\n    // if cordova\n    if (navigator.userAgent.match(/(iPhone|iPod|Android)/)) {\n      _this.watchId.orientation = navigator.compass.watchHeading( function(heading) {\n        _this.updateOrientation(heading.magneticHeading);\n      });\n\n    } else {\n      $(window).bind('deviceorientation.compassOrientation', function() {\n        // dont parse event as function variable as breaks scope\n        _this.updateOrientation(event.alpha);\n     });\n    }\n  },\n\n  /*\n   * Ubind navigator.gelocation and deviceorientation events\n   *\n   */\n  stopGeoWatchers: function() {\n    var _this = this;\n\n    navigator.geolocation.clearWatch( _this.watchId.position );\n    navigator.compass.clearWatch( _this.watchId.orientation );\n\n  },\n\n  stop: function() {\n    var _this = this;\n\n    _this.stopGeoWatchers();\n    $(window).unbind('.compassOrientation');\n\n    Game.nextMinigame();\n  },\n\n  init: function() {\n    var _this = this;\n\n    // Check for geolocation and orientation availability\n    if (navigator.geolocation && window.DeviceOrientationEvent) {\n\n      // Set initial positions: origin, destiny, position\n      navigator.geolocation.getCurrentPosition( function(position) {\n\n        var pos = position.coords;\n\n        // Set Origin location\n        _this.origin.lat = pos.latitude,\n        _this.origin.lng = pos.longitude,\n\n        // Generate random destiny\n        _this.destiny.lat = pos.latitude + _this.getRandomDistance(_this.minDistance,_this.maxDistance);\n        _this.destiny.lng = pos.longitude + _this.getRandomDistance(_this.minDistance,_this.maxDistance);\n\n        // Set total distance\n        _this.totalDistance = _this.getDistanceInKm({\n          lat: pos.latitude,\n          lng: pos.longitude\n        }, _this.destiny) - _this.destinyThresholdRadius;\n\n        // Set current position\n        _this.updatePosition({\n          lat: pos.latitude,\n          lng: pos.longitude,\n        });\n\n        // Set sky color\n        _this.skyColor();\n\n        // Set map theme graphics\n        _this.mapTheme();\n\n        // Start orientation and position watchers\n        _this.startGeoWatchers();\n\n        // Fade in compass\n        _this.$compassContainer.fadeIn();\n\n      });\n\n    } else {\n\n      // fallback for when not possible. Why? no idea but it might happen\n      console.log(':(');\n    }\n  },\n};\n","Game = {\n  minigames: [\n    'tippyswitch',\n    'math',\n    'supertap',\n    'reset',\n    'photocolor',\n  ],\n  worlds: [\n    'Desert',\n    'City',\n  ],\n  gameAttempts: 2,\n\n  // USER\n\n  createUser: function(username, callback) {\n    var _this = this;\n\n    window.localStorage.setItem('username', username);\n    window.localStorage.setItem('points', 0);\n    window.localStorage.setItem('gems', 0);\n    window.localStorage.setItem('progress', 0);\n    window.localStorage.setItem('loops', 0);\n    window.localStorage.setItem('world', 0);\n    window.localStorage.setItem('rank', _this.setRank());\n    _this.setupLoop();\n\n    callback();\n  },\n\n  getUsername: function() {\n    return window.localStorage.getItem('username');\n  },\n\n  // GAME STATE\n\n  setupLoop: function() {\n    var _this = this;\n\n    console.log('Setting up loop');\n\n    _this.setProgress(0);\n\n    _this.setLoopOrder( Utilities.Misc.shuffleArray(_this.minigames) );\n\n  },\n\n  getProgress: function() {\n    var progress = parseInt(window.localStorage.getItem('progress'));\n\n    if (progress === null || isNaN(progress)) {\n      progress = 0;\n    }\n\n    return progress;\n  },\n\n  setProgress: function(progress) {\n    window.localStorage.setItem('progress', progress);\n  },\n\n  getProgressPercent: function() {\n    var _this = this;\n    var currentProgress = _this.getProgress();\n\n    return currentProgress / this.minigames.length;\n  },\n\n  getLoops: function() {\n    var loops = parseInt(window.localStorage.getItem('loops'));\n\n    if (loops === null || isNaN(loops)) {\n      loops = 0;\n    }\n\n    return loops;\n  },\n\n  setLoops: function(loops) {\n    window.localStorage.setItem('loops', loops);\n  },\n\n  setLoopOrder: function(loopOrder) {\n    window.localStorage.setItem('loopOrder', loopOrder);\n  },\n\n  getLoopOrder: function() {\n    var _this = this;\n    \n    var loopOrder = window.localStorage.getItem('loopOrder');\n    \n    if(!loopOrder) {\n      return [];\n    }\n    return loopOrder.split(',');\n  },\n\n  nextMinigame: function() {\n    var _this= this;\n    var currentProgress = _this.getProgress();\n    var gameOrder = _this.getLoopOrder();\n\n    console.log('Loading next minigame');\n    console.log('Current progress index', currentProgress);\n    console.log('Game to load', gameOrder[currentProgress]);\n\n    Router.go('/games/' + gameOrder[currentProgress] + '/');\n  },\n\n  finishLoop: function() {\n    var _this= this;\n    var currentLoops = _this.getLoops();\n    var currentWorld = _this.getWorld();\n\n    console.log('Finished loop');\n\n    // perhaps a lot more needs to happen here. This is probably where the narrative should happen. But this could be a different route just for animation. Would then need to if/else in gameComplete when checking if last game in loop\n\n    _this.setLoops(currentLoops + 1);\n\n    _this.nextWorld();\n\n    console.log('Loops so far', currentLoops);\n\n    _this.setupLoop();\n  },\n\n  // WORLD\n\n  nextWorld: function() {\n    var _this= this;\n    var currentWorld = parseInt( _this.getWorld() );\n    var nextWorld = currentWorld + 1;\n\n    if ( ( nextWorld + 1 ) === _this.worlds.length ) {\n      window.localStorage.setItem('world', 0);\n    } else {\n      window.localStorage.setItem('world', nextWorld);\n    }\n  },\n\n  getWorld: function() {\n    return window.localStorage.getItem('world');\n  },\n\n  getWorldName: function() {\n    var _this= this;\n    var worldNum = _this.getWorld();\n\n    return _this.worlds[worldNum];\n  },\n\n  // RANK\n\n  setRank: function() {\n    return Utilities.Word.getAdj(true, true) + ' ' + Utilities.Word.getNoun(false, true);\n  },\n\n  getRank: function() {\n    return window.localStorage.getItem('rank');\n  },\n\n  // MINI GAME\n\n  gameFail: function(tryAgainCallback, failCallback) {\n    var _this= this;\n\n    if (_this.gameAttempts > 1) {\n      _this.gameAttempts--;\n      tryAgainCallback();\n    } else {\n      failCallback();\n    }\n\n  },\n\n  gameComplete: function(points) {\n    var _this= this;\n    var currentProgress = _this.getProgress();\n\n    _this.setProgress(currentProgress + 1);\n\n    if (points) {\n      _this.setNewPoints(points);\n    }\n\n    if ((currentProgress + 1) === _this.minigames.length) {\n      _this.finishLoop();\n    }\n\n    Router.go('/');\n  },\n\n  // POINTS\n\n  getPoints: function() {\n    var points = window.localStorage.getItem('points');\n\n    if (points === null || isNaN(points)) {\n      points = 0;\n    }\n\n    return points;\n  },\n\n  setPoints: function(points) {\n    window.localStorage.setItem('points', points);\n  },\n\n  setNewPoints: function(points) {\n    var _this = this;\n\n    var points = parseInt(points);\n    var currentPoints = _this.getPoints();\n    var currentGems = _this.getGems();\n\n    if (points > 0) {\n      var modifier = (Math.log(currentGems+ 1) + 1);\n      var modifiedPoints = Math.round((points * modifier));\n\n      _this.setPoints( currentPoints + modifiedPoints );\n    } else {\n      _this.setPoints( currentPoints + points );\n    }\n  },\n\n  resetPoints: function() {\n    var _this = this;\n\n    _this.setPoints(0);\n  },\n\n  // GEMS\n\n  getGems: function() {\n    var gems = window.localStorage.getItem('gems');\n\n    if (gems === null || isNaN(gems)) {\n      gems = 0;\n    }\n\n    return gems; \n  },\n\n  setGems: function(gems) {\n    window.localStorage.setItem('gems', gems);\n  },\n\n  setNewGems: function(gems) {\n    var _this = this;\n    var gems = parseInt(gems);\n    var currentGems = _this.getGems();\n\n    _this.setGems( currentGems + gems);\n  },\n\n};\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar app = {\n  // Application Constructor\n  initialize: function() {\n    this.bindEvents();\n  },\n  // Bind Event Listeners\n  //\n  // Bind any events that are required on startup. Common events are:\n  // 'load', 'deviceready', 'offline', and 'online'.\n  bindEvents: function() {\n    document.addEventListener('deviceready', this.onDeviceReady, false);\n    document.addEventListener('DOMContentLoaded', this.onContentLoaded, false);\n    document.addEventListener(\"backbutton\", this.onBackKeyDown, false);\n  },\n  // deviceready Event Handler\n  //\n  // The scope of 'this' is the event. In order to call the 'receivedEvent'\n  // function, we must explicitly call 'app.receivedEvent(...);'\n  onDeviceReady: function() {\n    app.receivedEvent('deviceready');\n  },\n  onContentLoaded: function() {\n    FastClick.attach(document.body);\n  },\n  onBackKeyDown: function() {\n    return true;\n  },\n  // Update DOM on a Received Event\n  receivedEvent: function(id) {\n    console.log('Received Event: ' + id);\n\n    $('#game-username').html(Game.getUsername());\n    $('#game-points').html(Game.getPoints());\n    $('#game-gems').html(Game.getGems());\n    $('#game-progress').html(Game.getProgressPercent());\n  }\n};\n\napp.initialize();\n\nUtilities = {\n\n};\n","Menu = {\n  $menuBubble: $('#map-menu-bubble'),\n  $menuButton: $('#map-menu-button'),\n  $menuPoints: $('#menu-points'),\n  $menuRank: $('#menu-rank'),\n  $menuWorld: $('#menu-world'),\n\n  toggleMenu: function() {\n  //functionality to open and close menu\n  var _this = this;\n\n  _this.$menuBubble.toggle(\"fast\");\n  },\n\n  init: function() {\n    var _this = this;\n\n    _this.$menuPoints.html( Game.getPoints() );\n    _this.$menuWorld.html( Game.getWorldName() );\n    _this.$menuRank.html( Game.getRank() );\n\n    _this.$menuButton.on('click', function() {\n    _this.toggleMenu();\n    }); \n  }\n\n};\n","Router = {\n  init: function() {\n    var _this = this;\n\n    var regex =  /(.+?(?:www))/;\n    _this.basePath = regex.exec(window.location.href);\n\n    if (window.cordova.platformId === 'browser') {\n      _this.isBrowser = true;\n    } else {\n      _this.isBrowser = false;\n    }\n  },\n  go: function(url) {\n    var _this = this;\n\n    if (_this.isBrowser) {\n      window.location = url;\n    } else {\n      window.location = _this.basePath[0] + url + 'index.html';\n    }\n  },\n}\nRouter.init();","Utilities.Color = {\n  isNeighborColor: function(color1, color2, tolerance) {\n    if (tolerance == undefined) {\n      tolerance = 32;\n    }\n\n    return Math.abs(color1[0] - color2[0]) <= tolerance\n    && Math.abs(color1[1] - color2[1]) <= tolerance\n    && Math.abs(color1[2] - color2[2]) <= tolerance;\n  },\n\n  hslToRgb: function(h, s, l){\n    var r, g, b;\n\n    if (s == 0) {\n        r = g = b = l; // achromatic\n    } else {\n      var hue2rgb = function hue2rgb(p, q, t){\n        if (t < 0) {\n          t += 1;\n        }\n\n        if (t > 1) {\n          t -= 1;\n        }\n\n        if (t < 1 / 6) {\n          return p + (q - p) * 6 * t;\n        }\n\n        if (t < 1 / 2) {\n          return q;\n        }\n\n        if (t < 2 / 3) {\n          return p + (q - p) * (2 / 3 - t) * 6;\n        }\n\n        return p;\n      };\n\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255),];\n  }\n};","Utilities.Dialog = {\n  $target: $('.text-box-dialog'),\n  $parent: $('#dialog'),\n  interval: 44,\n\n  arrayIndex: 0,\n\n  lineIndex: 0,\n  lineTimer: 0,\n\n  read: function(dialogArray, callback) {\n\n    var _this = this;\n\n    _this.$parent = $('#dialog');\n    _this.$target = $('.text-box-dialog');\n\n    _this.dialogArray = dialogArray;\n    _this.arrayIndex = 0;\n    _this.callback = callback;\n\n    _this.$parent.show();\n\n    _this.$parent.off('click.dialogRead').on({\n      'click.dialogRead': function() {\n        if (_this.lineTimer > 0) {\n          _this.skipLine();\n        } else {\n          if (_this.arrayIndex === (_this.dialogArray.length - 1)) {\n            _this.finish();\n          } else {\n            _this.arrayIndex++;\n            _this.readLine();\n          }\n        }\n      },\n    });\n\n    _this.readLine();\n\n  },\n\n  readLine: function() {\n    var _this = this;\n    var dialogLine = _this.dialogArray[_this.arrayIndex];\n\n    _this.lineIndex = 0;\n    _this.$target.html('');\n    _this.lineTimer = setInterval(function() {\n\n      if (_this.lineIndex < dialogLine.length) {\n\n        _this.$target.append(dialogLine[_this.lineIndex]);\n        _this.lineIndex++;\n\n      } else {\n\n        _this.clearLineInterval();\n        _this.$target.append('<a class=\"text-box-next\">&rarr;</a>');\n\n      }\n\n    }, _this.interval);\n  },\n\n  clearLineInterval: function() {\n    var _this = this;\n\n    clearInterval(_this.lineTimer);\n    _this.lineTimer = 0;\n  },\n\n  skipLine: function() {\n    var _this = this;\n\n    _this.clearLineInterval();\n    _this.$target.html(_this.dialogArray[_this.arrayIndex]);\n    _this.$target.append('<a class=\"text-box-next\">&rarr;</a>');\n\n  },\n\n  finish: function() {\n    var _this = this;\n\n    _this.$parent.hide();\n    _this.$target.html('');\n\n    _this.callback();\n  },\n\n};\n","Utilities.Misc = {\n  shuffleArray: function(array) {\n    var counter = array.length, temp, index;\n\n    // While there are elements in the array\n    while (counter > 0) {\n      // Pick a random index\n      index = Math.floor(Math.random() * counter);\n\n      // Decrease counter by 1\n      counter--;\n\n      // And swap the last element with it\n      temp = array[counter];\n      array[counter] = array[index];\n      array[index] = temp;\n    }\n\n    return array;\n  },\n};","Utilities.Number = {\n  getRandomInt: function(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  },\n};","Utilities.Word = {\n  adjs: [],\n  nouns: [],\n\n  init: function(adjsList, nounList) {\n    var _this = this;\n\n    _this.adjs = adjsList;\n    _this.nouns = nounList;\n\n  },\n\n  /**\n   * Returns a word from the lists\n   * @param {string} kind Defines what kind of word return (adj|noun)\n   * @param {bool} indefinite Defines if it should append an indefinite article\n   */\n  getWord: function(kind, indefinite, capitalize) {\n    var _this = this;\n\n    var list = kind ==  'adj' ? _this.adjs : _this.nouns;\n    var word = list[Math.floor(Math.random() * list.length)];\n\n    if (capitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n\n    if (indefinite) {\n      if (_this.isVowel(word[0])) {\n        word = 'an ' + word;\n      } else {\n        word = 'a ' + word;\n      }\n    }\n\n    return word;\n  },\n\n  getAdj: function(indefinite, capitalize) {\n    var _this = this;\n\n    return _this.getWord('adj', indefinite, capitalize);\n  },\n\n  getNoun: function(indefinite, capitalize) {\n    var _this = this;\n\n    return _this.getWord('noun', indefinite, capitalize);\n  },\n\n  isVowel: function(character) {\n    return /[aeiouAEIOU]/.test(character);\n  }\n}\n\nUtilities.Word.init(Adjs, Nouns);\n"],"sourceRoot":"/source/"}